"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[399],{7731:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>o,frontMatter:()=>d,metadata:()=>t,toc:()=>h});var i=r(4848),s=r(8453);const d={sidebar_position:1,title:"Code-Review-PR-Workflow"},l=void 0,t={id:"contributing/code-review-pr-workflow",title:"Code-Review-PR-Workflow",description:"Code-Reviews \xfcber Pull Requests (PRs) sind ein wichtiger Aspekt der Entwicklung, da sie einen der wichtigsten",source:"@site/i18n/de/docusaurus-plugin-content-docs/current/contributing/code-review-pr-workflow.md",sourceDirName:"contributing",slug:"/contributing/code-review-pr-workflow",permalink:"/de/docs/contributing/code-review-pr-workflow",draft:!1,unlisted:!1,editUrl:"https://github.com/paion-data/Kugelblitz/tree/master/docs/docs/contributing/code-review-pr-workflow.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Code-Review-PR-Workflow"},sidebar:"tutorialSidebar",previous:{title:"Entwicklung",permalink:"/de/docs/development"},next:{title:"Markdown-Dokumentations-Styleguide",permalink:"/de/docs/contributing/markdown-documentation-style-guide"}},a={},h=[{value:"Was macht einen guten PR aus?",id:"was-macht-einen-guten-pr-aus",level:2},{value:"Arten von \xc4nderungen",id:"arten-von-\xe4nderungen",level:3},{value:"\xc4nderungen organisieren",id:"\xe4nderungen-organisieren",level:3},{value:"\xc4nderungen dokumentieren",id:"\xe4nderungen-dokumentieren",level:3},{value:"Phasen",id:"phasen",level:2},{value:"Work in Progress (WIP)",id:"work-in-progress-wip",level:3},{value:"Reviewable",id:"reviewable",level:3},{value:"Mergeable",id:"mergeable",level:3},{value:"Merged*",id:"merged",level:3},{value:"Closed*",id:"closed",level:3},{value:"Ablauf",id:"ablauf",level:2},{value:"Flags",id:"flags",level:2},{value:"Breakfix",id:"breakfix",level:3},{value:"Breaking Change",id:"breaking-change",level:3},{value:"Need 2 Reviews",id:"need-2-reviews",level:3},{value:"Need 1 Review",id:"need-1-review",level:3},{value:"Need Changes",id:"need-changes",level:3},{value:"Need Rebase",id:"need-rebase",level:3},{value:"Need Squash",id:"need-squash",level:3}];function c(e){const n={a:"a",em:"em",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"Code-Reviews \xfcber Pull Requests (PRs) sind ein wichtiger Aspekt der Entwicklung, da sie einen der wichtigsten\nKommunikationskan\xe4le f\xfcr \xc4nderungen in der Codebasis an alle Beteiligten darstellen. Den Status eines PRs zu bestimmen,\nist jedoch nicht immer einfach, insbesondere bei sehr aktiven PRs mit vielen Kommentaren und Diskussionen. Dieses\nDokument beschreibt, wie wir GitHub-Labels verwenden, um den Status eines PRs zu kennzeichnen und ihn so auf einen Blick\nzu erkennen. Es beschreibt au\xdferdem, wie ein PR leicht zu \xfcberpr\xfcfen ist. (Je einfacher ein PR zu \xfcberpr\xfcfen ist, desto\nschneller wird er gemergt!)"}),"\n",(0,i.jsx)(n.h2,{id:"was-macht-einen-guten-pr-aus",children:"Was macht einen guten PR aus?"}),"\n",(0,i.jsx)(n.p,{children:"Code-Review und das \xd6ffnen eines PR dienen zwei Zwecken:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Kugelblitz zu \xe4ndern - Aufgabe des Autors der \xc4nderungen."}),"\n",(0,i.jsx)(n.li,{children:"Sicherzustellen, dass die \xc4nderungen im PR Kugelblitz verbessern - Aufgabe der PR-Reviewer."}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"arten-von-\xe4nderungen",children:"Arten von \xc4nderungen"}),"\n",(0,i.jsx)(n.p,{children:"Die an Kugelblitz vorgenommenen \xc4nderungen lassen sich in der Regel in drei Haupttypen unterteilen:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Cleanup"}),": Diese lassen sich in drei Kategorien einteilen:"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Stilistische \xc4nderungen, die den Code lesbarer und besser an den Rest der Codebasis anpassen."}),"\n",(0,i.jsx)(n.li,{children:"Refactoring-\xc4nderungen, die den Code verbessern, indem sie Duplikate reduzieren oder Klassen und Abstraktionen\nbereinigen, die m\xf6glicherweise zu viele Verantwortlichkeiten hatten."}),"\n",(0,i.jsx)(n.li,{children:"\xc4nderungen zum Hinzuf\xfcgen oder Verbessern von Tests, um ungetestetes Verhalten abzudecken oder Tests\n\xfcbersichtlicher zu gestalten."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Logical"}),": Dies sind \xc4nderungen, die Funktionen und M\xf6glichkeiten hinzuf\xfcgen, die Kugelblitz bisher nicht hatte,\noder m\xf6glicherweise die Funktionsweise bestehender Funktionen und M\xf6glichkeiten ver\xe4ndern."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"\xe4nderungen-organisieren",children:"\xc4nderungen organisieren"}),"\n",(0,i.jsx)(n.p,{children:"Obwohl der Gro\xdfteil der eingereichten \xc4nderungen logische \xc4nderungen sind, sind Bereinigungs\xe4nderungen sehr willkommen.\nBeachten Sie jedoch einige kleine Richtlinien, um sicherzustellen, dass die \xc4nderungen f\xfcr PR-Pr\xfcfer leicht zu\n\xfcberpr\xfcfen sind:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Die \xc4nderungen sollten den Code gem\xe4\xdf den ",(0,i.jsx)(n.a,{href:"https://google.github.io/styleguide/javaguide.html",children:"Richtlinien f\xfcr guten Stil"}),"\nverbessern."]}),"\n",(0,i.jsx)(n.li,{children:"Die \xc4nderungen sollten andere \xc4nderungen, insbesondere logische \xc4nderungen, nicht verdecken."}),"\n"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Es ist besser, Bereinigungs\xe4nderungen als separaten PR oder zumindest als separate Commits von Commits mit logischen\n\xc4nderungen zu erfassen. (Separate PRs werden dringend empfohlen.)"}),"\n",(0,i.jsx)(n.li,{children:"Es ist besser, zu viele kleine Commits zusammenzufassen, als zu wenige gro\xdfe Commits mit\n\xfcberlappenden \xc4nderungen. Kleine Commits lassen sich leichter zusammenfassen als gro\xdfe Commits."}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"\xe4nderungen-dokumentieren",children:"\xc4nderungen dokumentieren"}),"\n",(0,i.jsxs)(n.p,{children:["Manchmal sind die \xc4nderungen und ihr Grund offensichtlich, oft ist jedoch unklar, was der Sinn der \xc4nderung ist. Um es\nden Pr\xfcfern zu erleichtern, die \xc4nderungen und ihren Grund zu verstehen, beschreiben Sie die \xc4nderungen bitte in der\nPR-Beschreibung. Es ist auch ratsam, Ihre eigenen PRs zu \xfcberpr\xfcfen und Kommentare zu hinterlassen, wenn die \xc4nderungen\nzus\xe4tzliche Erl\xe4uterungen ben\xf6tigen. Denken Sie daran: ",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"Es ist die Aufgabe des Autors, den Pr\xfcfern die \xdcberpr\xfcfung der\n\xc4nderungen zu erleichtern!"})})]}),"\n",(0,i.jsx)(n.h2,{id:"phasen",children:"Phasen"}),"\n",(0,i.jsx)(n.p,{children:"Wenn ein PR vom \xd6ffnen zum Zusammenf\xfchren oder Schlie\xdfen \xfcbergeht, durchl\xe4uft er verschiedene Zust\xe4nde bzw. Phasen, bis\ner schlie\xdflich entweder geschlossen oder zusammengef\xfchrt wird."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#work-in-progress-wip",children:"Work in Progress (WIP)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#reviewable",children:"Reviewable"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#mergeable",children:"Mergeable"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#merged",children:"Merged*"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#closed",children:"Closed*"})}),"\n"]}),"\n",(0,i.jsx)("sub",{children:"* kennzeichnet integrierte GitHub-PR-Status."}),"\n",(0,i.jsx)(n.h3,{id:"work-in-progress-wip",children:"Work in Progress (WIP)"}),"\n",(0,i.jsx)(n.p,{children:"Der PR wird aktiv ge\xe4ndert, oft als Reaktion auf Feedback von Gutachtern oder um Feedback zu teilweisen Arbeiten zu\nerm\xf6glichen. Sie k\xf6nnen ihn gerne \xfcberpr\xfcfen, der Code wird vom Autor jedoch noch nicht als vollst\xe4ndig angesehen und\nmuss wahrscheinlich erneut \xfcberpr\xfcft werden, sobald die laufenden Arbeiten abgeschlossen sind."}),"\n",(0,i.jsx)(n.h3,{id:"reviewable",children:"Reviewable"}),"\n",(0,i.jsx)(n.p,{children:"Der Autor betrachtet die \xc4nderungen als abgeschlossen und bereit zur vollst\xe4ndigen \xdcberpr\xfcfung."}),"\n",(0,i.jsx)(n.h3,{id:"mergeable",children:"Mergeable"}),"\n",(0,i.jsxs)(n.p,{children:["Sobald ein PR diese Pr\xfcfungen bestanden hat, ist er zusammenf\xfchrbar und kann ",(0,i.jsx)(n.a,{href:"#merged",children:"Merged*"}),"\nwerden:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Die \xc4nderungen wurden von mindestens zwei Pr\xfcfern freigegeben."}),"\n",(0,i.jsx)(n.li,{children:"Die \xc4nderungen basieren auf dem Head des \u201eMaster\u201c-Branchs."}),"\n",(0,i.jsx)(n.li,{children:"Die Commits wurden in logische Commits zusammengefasst."}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"merged",children:"Merged*"}),"\n",(0,i.jsxs)(n.p,{children:["Der PR wurde zusammengef\xfchrt. Dies ist ein integrierter GitHub-PR-Status und sollte neben dem Status\n",(0,i.jsx)(n.a,{href:"#zusammengef%C3%BChrt",children:"Zusammenf\xfchrbar"})," bestehen."]}),"\n",(0,i.jsx)(n.h3,{id:"closed",children:"Closed*"}),"\n",(0,i.jsx)(n.p,{children:"Die \xc4nderungen werden nicht zusammengef\xfchrt, und der PR sollte keine weitere Aufmerksamkeit erhalten. Geschlossene PRs\nk\xf6nnen wieder ge\xf6ffnet werden."}),"\n",(0,i.jsx)(n.h2,{id:"ablauf",children:"Ablauf"}),"\n",(0,i.jsx)(n.p,{children:"Obwohl es keine Einschr\xe4nkungen f\xfcr die Status gibt, da sie nur durch Labels gekennzeichnet sind, zeigt diese Tabelle\ndie erwarteten Status\xfcberg\xe4nge von einer Phase zur n\xe4chsten."}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Start"}),(0,i.jsx)(n.th,{children:"Ende"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"-"}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.a,{href:"#work-in-progress-wip",children:"Work in Progress (WIP)"}),", ",(0,i.jsx)(n.a,{href:"#reviewable",children:"Reviewable"}),", ",(0,i.jsx)(n.a,{href:"#closed",children:"Closed*"})]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"#work-in-progress-wip",children:"Work in Progress (WIP)"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.a,{href:"#reviewable",children:"Reviewable"}),", ",(0,i.jsx)(n.a,{href:"#closed",children:"Closed*"})]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"#reviewable",children:"Reviewable"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.a,{href:"#work-in-progress-wip",children:"Work in Progress (WIP)"}),", ",(0,i.jsx)(n.a,{href:"#mergeable",children:"Mergeable"}),", ",(0,i.jsx)(n.a,{href:"#closed",children:"Closed*"})]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"#mergeable",children:"Mergeable"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.a,{href:"#merged",children:"Merged*"}),", ",(0,i.jsx)(n.a,{href:"#closed",children:"Closed*"})]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"#merged",children:"Merged*"})}),(0,i.jsx)(n.td,{children:"-"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"#closed",children:"Closed*"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.a,{href:"#work-in-progress-wip",children:"Work in Progress (WIP)"}),", ",(0,i.jsx)(n.a,{href:"#reviewable",children:"Reviewable"})]})]})]})]}),"\n",(0,i.jsx)(n.h2,{id:"flags",children:"Flags"}),"\n",(0,i.jsxs)(n.p,{children:["Abh\xe4ngig von den \xc4nderungen, den Vorg\xe4ngen im Repository au\xdferhalb des PR und dem aktuellen Prozessstadium eines PR\nk\xf6nnen unterschiedliche Flags auf den PR angewendet werden. Einige Flags weisen auf Aspekte der \xc4nderungen hin, w\xe4hrend\nandere Flags anzeigen, was mit den Commits oder \xc4nderungen im PR geschehen muss, bevor er als\n",(0,i.jsx)(n.a,{href:"#mergeable",children:"Mergeable"})," betrachtet werden kann."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#breakfix",children:"Breakfix"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#breaking-change",children:"Breaking Change"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#need-2-reviews",children:"Need 2 Reviews"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#need-1-review",children:"Need 1 Review"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#need-changes",children:"Need Changes"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#need-rebase",children:"Need Rebase"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#need-squash",children:"Need Squash"})}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"breakfix",children:"Breakfix"}),"\n",(0,i.jsx)(n.p,{children:"Die \xc4nderungen im PR sind dringend erforderlich, um eine fehlerhafte Version zu beheben. Fehlerhafte Versionen sollten\nso schnell wie m\xf6glich behoben werden. Daher sollten Fehlerbehebungs-PRs h\xf6here Priorit\xe4t erhalten als andere PRs."}),"\n",(0,i.jsx)(n.h3,{id:"breaking-change",children:"Breaking Change"}),"\n",(0,i.jsx)(n.p,{children:"Die \xc4nderungen im PR sind nicht abw\xe4rtskompatibel mit kundenorientierten APIs. Diese APIs sind derzeit nicht\ndokumentiert, werden aber hier verlinkt, sobald sie dokumentiert sind. Die Arbeitsliste der kundenorientierten APIs\numfasst derzeit:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Antwortformate (inkl. Header)"}),"\n",(0,i.jsx)(n.li,{children:"Anfrageformate (inkl. URLs, Abfrageparameter und Header)"}),"\n",(0,i.jsx)(n.li,{children:"Konfiguration (inkl. Eigenschaftsnamen, Hilfsklassen und Schnittstellen)"}),"\n",(0,i.jsx)(n.li,{children:"Datenbankabfragen (z. B. ArangoDB)"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"need-2-reviews",children:"Need 2 Reviews"}),"\n",(0,i.jsxs)(n.p,{children:["Zwei weitere Genehmigungen sind erforderlich, bevor der PR als ",(0,i.jsx)(n.a,{href:"#mergeable",children:"Mergeable"})," eingestuft werden kann."]}),"\n",(0,i.jsx)(n.h3,{id:"need-1-review",children:"Need 1 Review"}),"\n",(0,i.jsxs)(n.p,{children:["Eine weitere Genehmigung ist erforderlich, bevor der PR als ",(0,i.jsx)(n.a,{href:"#mergeable",children:"Mergeable"})," eingestuft werden kann."]}),"\n",(0,i.jsx)(n.h3,{id:"need-changes",children:"Need Changes"}),"\n",(0,i.jsx)(n.p,{children:"Die Pr\xfcfer des PR sind der Ansicht, dass noch \xc4nderungen vorgenommen werden m\xfcssen, bevor sie den PR genehmigen k\xf6nnen.\nPr\xfcfer, die in einem Kommentar \xc4nderungen anfordern, sollten sicherstellen, dass dieses Tag auf den PR angewendet wird.\nDer Autor des PR sollte dieses Tag entfernen, sobald er der Meinung ist, alle erforderlichen \xc4nderungen vorgenommen zu\nhaben."}),"\n",(0,i.jsx)(n.h3,{id:"need-rebase",children:"Need Rebase"}),"\n",(0,i.jsxs)(n.p,{children:["Die \xc4nderungen m\xfcssen auf den Head des \u201eMaster\u201c-Branchs rebasiert werden, bevor der PR als ",(0,i.jsx)(n.a,{href:"#mergeable",children:"Mergeable"}),"\nbetrachtet werden kann."]}),"\n",(0,i.jsx)(n.h3,{id:"need-squash",children:"Need Squash"}),"\n",(0,i.jsxs)(n.p,{children:["Die \xc4nderungen m\xfcssen in logische Commits zusammengefasst werden, bevor der PR als ",(0,i.jsx)(n.a,{href:"#mergeable",children:"Mergeable"})," betrachtet\nwerden kann."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Hinweis: Ein PR, der nicht die erforderlichen zwei Genehmigungen erhalten hat, sollte nicht zusammengefasst werden."}),"\nAlle Commits, die als Reaktion auf Review-Kommentare erstellt wurden, sollten bis zum Abschluss des Reviews im Branch\nverbleiben, damit Reviewer die als Reaktion auf ihre Kommentare vorgenommenen \xc4nderungen leicht verfolgen k\xf6nnen."]})]})}function o(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>l,x:()=>t});var i=r(6540);const s={},d=i.createContext(s);function l(e){const n=i.useContext(d);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),i.createElement(d.Provider,{value:n},e.children)}}}]);